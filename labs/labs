from numpy import pi, linspace, array, dot, sin, cos, diag, concatenate, zeros
from numpy.linalg import inv

def D(q, params):
    alpha_1, alpha_2 = q
    l, m, J, b, g = params
    
    d11 = (m[0]+m[1]) * l[0]**2  + J[0]
    d12 = m[1]* l[0]* l[1]* cos(alpha_1 - alpha_2)
    d21 = d12
    d22 = m[1] * l[1]**2 + J[1]
    return array([[d11,d12],[d21,d22]])

def c_term(q, dq, params):
    alpha_1, alpha_2 = q
    dalpha_1, dalpha_2 = dq

    c1 = m[1]* l[0]* l[1]* sin(alpha_1 - alpha_2)* dalpha_2**2
    c2 = -m[1]* l[0]* l[1]* sin(alpha_1 - alpha_2)* dalpha_1**2
    return array([c1, c2])

def g_term(q, params):
    alpha_1, alpha_2 = q

    g1 = (m[0]+m[1])*g*l[0]*cos(alpha_1)
    g2 = m[1]*g*l[1]*cos(alpha_2)
    return array([g1, g2])

def Q_d(q, dq, params):
    
    dalpha_1, dalpha_2 = dq
    Q_d_1 = b[0]*dalpha_1
    Q_d_2 = b[1]*dalpha_2
    return array([Q_d_1, Q_d_2])

def h(q, dq, params):
    return c_term(q, dq, params) + g_term(q, params)
